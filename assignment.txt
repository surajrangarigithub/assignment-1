
Assignment 1:
import java.util.*;
import java.io.*;

public class ass1 {
    
        



        public static  int[] numSum(int[] nums, int target) {
            for (int i = 0; i < nums.length; i++) {
                for (int j = i + 1; j < nums.length; j++) {
                    if (nums[i] + nums[j] == target) {
                       int[] result=  {i, j};
                       System.out.println(Arrays.toString(result));

                    }
                    
                }
            }
            return new int[] {};
        }
    

    
    public static void main(String []args){
        int [] nums ={ 2,7,11,15};
        int target=9;
        numSum(nums,target);
        
            }
    }


Assignment 2:

import java.util.Arrays;
import java.util.LinkedList;
import java.util.Scanner;

public class ass2 {

        public static int removeElement(int[] nums, int val) {
            int index = 0; 
            for (int i = 0; i < nums.length; i++) {
                if (nums[i] != val) {
                    nums[index] = nums[i];
                    index++;
                }

            }
            return index;
            
            
        }
            public static void main(String[] args) {
                int[] nums = {3, 2, 2, 3};
                int val = 3;
        
                ass2 sc = new ass2();
                int k = ass2.removeElement(nums, val);
                System.out.print("Updated Array: ");
                for (int i = 0; i < k; i++) {
                    System.out.print(nums[i] + " ");
                }
                System.out.println();
                System.out.println("Count of elements  equal to is " + k);
               
                
            }
        }
        



Assignment 3:
class ass3 {
    public int searchInsert(int[] nums, int target) {
        int left = 0;
        int right = nums.length - 1;
        
        while (left <= right) {
            int mid = left + (right - left) / 2;
            
            if (nums[mid] == target) {
                return mid;
            } else if (nums[mid] < target) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
        
       
        int index = left;
       
        
       
        
        return index;
    }
    
public static void main(String[] args) {
    int[] nums = {1, 3, 5, 6};
    int target = 6;

    ass3 solution = new ass3();
    int index = solution.searchInsert(nums, target);
    System.out.println("Index: " + index);
    
}
}

Assignment 4:
class ass4 {
    public  static int[] addOne(int[] arr) {
        int n = arr.length;
        
        
        for (int i = n - 1; i >= 0; i--) {
           
            arr[i]++;
            
           
            if (arr[i] == 10) {
                arr[i] = 0;
            } else {
                
                return arr;
            }}
        return arr;}
    public static void main (String[] args) {
        
                int[] arr = {1, 2, 3};
        
                ass4 sc= new ass4();
                int[] result = sc.addOne(arr);
                
                System.out.print("Result: ");
                for (int digit : result) {
                    System.out.print(digit+ " ");
                }
                System.out.println();
            }
        }
        
      
  Assignment 5:  
  import java.util.Arrays;
import java.util.Scanner;

public class HelloWorld {
    public static void merge(int[] nums1, int m, int[] nums2, int n) {
        int i = m - 1;
        int j = n - 1;
        int k = m + n - 1;
        
        while (i >= 0 && j >= 0) {
            if (nums1[i] >= nums2[j]) {
                nums1[k] = nums1[i];
                i--;
            } else {
                nums1[k] = nums2[j];
                j--;
            }
            k--;
        }
        
        while (j >= 0) {
            nums1[k] = nums2[j];
            j--;
            k--;
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        System.out.print("Enter the length of nums1 (m): ");
        int m = sc.nextInt();
        
        System.out.print("Enter the elements of nums1 : ");
        int[] nums1 = new int[m];
        for (int i = 0; i < m; i++) {
            nums1[i] = sc.nextInt();
        }
        
        System.out.print("Enter the length of nums2 (n): ");
        int n = sc.nextInt();
        
        System.out.print("Enter the elements of nums2 : ");
        int[] nums2 = new int[n];
        for (int i = 0; i < n; i++) {
            nums2[i] = sc.nextInt();
        }
        
       
        merge(nums1, m, nums2, n);
        
        System.out.println("Merged Array: " + Arrays.toString(nums1));
    }
}


  Assignment 6:
  import java.util.HashSet;
import java.util.Scanner;

 class ass6 {
    public  static boolean duplicate(int[] nums) {
        HashSet<Integer> set = new HashSet<>();

        for (int a : nums) {
            if (set.contains(a)) {
                return true;
            }
            set.add(a);
        }

        return false;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the length of the array: ");
        int length = scanner.nextInt();

        int[] nums = new int[length];
        System.out.print("Enter the elements of the array: ");
        for (int i = 0; i < length; i++) {
            nums[i] = scanner.nextInt();
        }

       
       
        boolean Duplicate = duplicate(nums);

        System.out.println("Contains Duplicate: " + Duplicate);
    }
}


 Assignment 7:
 import java.util.Scanner;

 class ass7{
    public static void moveZeroes(int[] nums) {
        int n = nums.length;
        int nonZeroIndex = 0;
        
        
        for (int i = 0; i < n; i++) {
            if (nums[i] != 0) {
                nums[nonZeroIndex++] = nums[i];
            }
        }
        
        
        while (nonZeroIndex < n) {
            nums[nonZeroIndex++] = 0;
        }
    }

    public static void main(String[] args) {
        Scanner sc= new Scanner(System.in);

        System.out.print("Enter the length of the array: ");
        int length = sc.nextInt();

        int[] nums = new int[length];
        System.out.print("Enter the elements of the array: ");
        for (int i = 0; i < length; i++) {
            nums[i] = sc.nextInt();
        }

       moveZeroes(nums);

        System.out.print("new array: ");
        for (int num : nums) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
}


    
Assignment 8:
import java.util.*;

class ass8{
    public static int[] findError(int[] nums) {
        int[] result = new int[2];
        
        Set<Integer> set = new HashSet<>();
        int duplicate = 0;
        int sum = 0;
        
        for (int num : nums) {
            if (set.contains(num)) {
                duplicate = num;
            }
            set.add(num);
            sum += num;
        }
        
        int n = nums.length;
        int missingNumber = (n * (n + 1)) / 2 - sum + duplicate;
        
        result[0] = duplicate;
        result[1] = missingNumber;
        
        return result;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter the length of the array: ");
        int length = sc.nextInt();

        int[] nums = new int[length];
        System.out.print("Enter the elements of the array: ");
        for (int i = 0; i < length; i++) {
            nums[i] = sc.nextInt();
        }

       
        int[] result = findError(nums);

        System.out.println("Duplicate Number: " + result[0]);
        System.out.println("Missing Number: " + result[1]);
    }
}

    
    
      
    


